<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\crud\controllers\base;

use backend\modules\crud\models\Psmf;
use Yii;
use yii\data\ActiveDataProvider;
use yii\helpers\StringHelper;
use yii\web\Controller;
use yii\web\HttpException;
use yii\helpers\Url;
use yii\filters\AccessControl;
use dmstr\bootstrap\Tabs;
use yii\web\UploadedFile;

/**
* PsmfController implements the CRUD actions for Psmf model.
*/
class PsmfController extends Controller
{
/**
* @var boolean whether to enable CSRF validation for the actions in this controller.
* CSRF validation is enabled only when both this property and [[Request::enableCsrfValidation]] are true.
*/
public $enableCsrfValidation = false;


/**
* Lists all Psmf models.
* @return mixed
*/
    public function actionIndex()
    {
        $dataProvider = new ActiveDataProvider([
            'query' => Psmf::find()->where(['company_id' => Yii::$app->user->identity->company->id]),
        ]);

        Tabs::clearLocalStorage();

        Url::remember();
        \Yii::$app->session['__crudReturnUrl'] = null;

        return $this->render('index', [
            'dataProvider' => $dataProvider,
        ]);
    }



/**
* Creates a new Psmf model.
* If creation is successful, the browser will be redirected to the 'view' page.
* @return mixed
*/
    public function actionCreate()
    {
        $model = new Psmf;

        try {
            if ($model->load($_POST)  ) {

                $model->user_id = \Yii::$app->user->identity->id;
                $model->company_id = \Yii::$app->user->identity->company->id;
                $model->version = $model->getNewVersion();

                $model->psmfFile = UploadedFile::getInstance($model, 'psmfFile');

                if (! $model->upload())
                {
                    \Yii::$app->getSession()->setFlash('error', Yii::t('app','can\'t upload fiel right now try again later'));
                    return $this->redirect(\Yii::$app->request->referrer);
                }

                if ($model->save()) {
                    return $this->redirect(['index']);
                }
            } elseif (!\Yii::$app->request->isPost) {
                $model->load($_GET);
            }
        } catch (\Exception $e) {
            $msg = (isset($e->errorInfo[2]))?$e->errorInfo[2]:$e->getMessage();
            $model->addError('_exception', $msg);
        }
        return $this->render('create', ['model' => $model]);
    }


    public function actionDownload ($url)
    {
        $path = Yii::getAlias('@webroot').'/files/psmfFiles/';
        $fileName = StringHelper::basename($url);
        $path .= $fileName;
        Yii::$app->response->sendFile($path);
    }



/**
* Finds the Psmf model based on its primary key value.
* If the model is not found, a 404 HTTP exception will be thrown.
* @param integer $id
* @return Psmf the loaded model
* @throws HttpException if the model cannot be found
*/
protected function findModel($id)
{
if (($model = Psmf::findOne($id)) !== null) {
return $model;
} else {
throw new HttpException(404, 'The requested page does not exist.');
}
}
}
