<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\crud\models\base;

use Yii;

/**
 * This is the base-model class for table "icsr_concomitant_drugs".
 *
 * @property integer $id
 * @property integer $icsr_id
 * @property string $drug_name
 * @property string $start_date
 * @property string $stop_date
 * @property string $duration_of_use
 * @property string $dose
 * @property integer $frequency_lkp_id
 *
 * @property \backend\modules\crud\models\LkpFrequency $frequencyLkp
 * @property \backend\modules\crud\models\Icsr $icsr
 * @property string $aliasModel
 */
abstract class IcsrConcomitantDrug extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'icsr_concomitant_drugs';
    }

    /**
     * Alias name of table for crud viewsLists all Area models.
     * Change the alias name manual if needed later
     * @return string
     */
    public function getAliasModel($plural=false)
    {
        if($plural){
            return Yii::t('app', 'IcsrConcomitantDrugs');
        }else{
            return Yii::t('app', 'IcsrConcomitantDrug');
        }
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['id', 'icsr_id', 'frequency_lkp_id'], 'required'],
            [['id', 'icsr_id', 'frequency_lkp_id'], 'integer'],
            [['start_date', 'stop_date'], 'safe'],
            [['drug_name', 'duration_of_use', 'dose'], 'string', 'max' => 45],
            [['frequency_lkp_id'], 'exist', 'skipOnError' => true, 'targetClass' => LkpFrequency::className(), 'targetAttribute' => ['frequency_lkp_id' => 'id']],
            [['icsr_id'], 'exist', 'skipOnError' => true, 'targetClass' => Icsr::className(), 'targetAttribute' => ['icsr_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'icsr_id' => Yii::t('app', 'Icsr ID'),
            'drug_name' => Yii::t('app', 'Drug Name'),
            'start_date' => Yii::t('app', 'Start Date'),
            'stop_date' => Yii::t('app', 'Stop Date'),
            'duration_of_use' => Yii::t('app', 'Duration Of Use'),
            'dose' => Yii::t('app', 'Dose'),
            'frequency_lkp_id' => Yii::t('app', 'Frequency Lkp ID'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(
            parent::attributeHints(),
            [
            'id' => Yii::t('app', 'ID'),
            'icsr_id' => Yii::t('app', 'Icsr Id'),
            'drug_name' => Yii::t('app', 'Drug Name'),
            'start_date' => Yii::t('app', 'Start Date'),
            'stop_date' => Yii::t('app', 'Stop Date'),
            'duration_of_use' => Yii::t('app', 'Duration Of Use'),
            'dose' => Yii::t('app', 'Dose'),
            'frequency_lkp_id' => Yii::t('app', 'Frequency Lkp Id'),
            ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getFrequencyLkp()
    {
        return $this->hasOne(\backend\modules\crud\models\LkpFrequency::className(), ['id' => 'frequency_lkp_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getIcsr()
    {
        return $this->hasOne(\backend\modules\crud\models\Icsr::className(), ['id' => 'icsr_id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\modules\crud\models\query\IcsrConcomitantDrugQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\crud\models\query\IcsrConcomitantDrugQuery(get_called_class());
    }


}
